[versions]
mockitoKotlinVersion = "4.1.0"
kotlinReflectVersion = "1.6.10"
kotlinStdlibJdk8Version = "1.6.10"
julToSl4jVersion = "1.7.30"
logbackJsonClassicVersion = "0.1.5"
logbackJacksonVersion = "0.1.5"
rxJava2Version = "2.2.21"
gsonVersion = "2.10.1"
googleCloudPubSubVersion = "1.112.0"
googleCloudLoggingVersion = "3.14.7"
grpcNettyVersion = "1.46.0"
junitJupiterEngineVersion = "3.8.0"

# Micronaut
micronautTestJunitVersion = "3.8.0"

[libraries]
mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlinVersion"}
mockito = { module = "org.mockito:mockito-core" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlinReflectVersion" }
kotlinStdlibJdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlinStdlibJdk8Version" }
julToSl4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "julToSl4jVersion" }
logbackJsonClassic = { module = "ch.qos.logback.contrib:logback-json-classic", version.ref = "logbackJsonClassicVersion" }
logbackJackson = { module = "ch.qos.logback.contrib:logback-jackson", version.ref = "logbackJacksonVersion" }
rxJava2 = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxJava2Version" }
gson = { module = "com.google.code.gson:gson", version.ref = "gsonVersion" }
googleCloudPubSub = { module = "com.google.cloud:google-cloud-pubsub", version.ref = "googleCloudPubSubVersion" }
googleCloudLogging = { module = "com.google.cloud:google-cloud-logging", version.ref = "googleCloudLoggingVersion" }
grpcNetty = { module = "io.grpc:grpc-netty", version.ref = "grpcNettyVersion" }
junitJupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiterEngineVersion" }
jakartaAnnotationApi = { module = "jakarta.annotation:jakarta.annotation-api" }
junitJupiterApi = { module = "org.junit.jupiter:junit-jupiter-api" }
swaggerAnnotations = { module = "io.swagger.core.v3:swagger-annotations" }
jacksonModuleKotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
jacksonDatatypeJsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" }
logbackClassic = { module = "ch.qos.logback:logback-classic" }
postgresql = { module = "org.postgresql:postgresql" }

# Micronaut
micronautTestJunit = { module = "io.micronaut.test:micronaut-test-junit5", version.ref = "micronautTestJunitVersion" }
micronautDataProcessor = { module = "io.micronaut.data:micronaut-data-processor" }
micronautHttpValidation = { module = "io.micronaut:micronaut-http-validation" }
micronautOpenApi = { module = "io.micronaut.openapi:micronaut-openapi" }
micronautHttpClient = { module = "io.micronaut:micronaut-http-client" }
micronautJacksonDataBind = { module = "io.micronaut:micronaut-jackson-databind" }
micronautKotlinRuntime = { module = "io.micronaut.kotlin:micronaut-kotlin-runtime" }
micronautDataJdbc = { module = "io.micronaut.data:micronaut-data-jdbc" }
micronautValidation = { module = "io.micronaut:micronaut-validation" }
micronautLiquibase = { module = "io.micronaut.liquibase:micronaut-liquibase" }
micronautJdbcHikari = { module = "io.micronaut.sql:micronaut-jdbc-hikari" }
micronautReactor = { module = "io.micronaut.reactor:micronaut-reactor" }
micronautReactorHttpClient = { module = "io.micronaut.reactor:micronaut-reactor-http-client" }
micronautManagement = { module = "io.micronaut:micronaut-management" }
micronautDataHibernateJpa = { module = "io.micronaut.data:micronaut-data-hibernate-jpa" }
micronautTestRestAssured = { module = "io.micronaut.test:micronaut-test-rest-assured" }
micronautInjectJava = { module = "io.micronaut:micronaut-inject-java" }